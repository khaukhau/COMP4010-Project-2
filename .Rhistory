library(tidyverse)
install.packages("vroom")
library(vroom)
install.packages("fs")
library(fs)
library(readr)
library(dplyr)
paygap <- read_csv('data/cleaned/paygaps_2018_2022.csv')
companies <- read_csv('data/cleaned/companies.csv')
# Function to filter sector by keyword
filter_by_keyword <- function(df, keywords) {
pattern <- paste(keywords, collapse = "|")
filtered_df <- df[grep(pattern, df$CurrentName, ignore.case = TRUE ),]
return(filtered_df)
}
# Test on the Technology sector
keywords_tech_sector <- c("Tech", "IT")
tech_sector_df <- filter_by_keyword(paygap, keywords_tech_sector)
keywords_financial_sector <- c("Financial", "Finance", "Insurance")
financial_sector_df <- filter_by_keyword(paygap, keywords_financial_sector)
keywords_bank_sector <- c("Bank")
bank_sector_df <- filter_by_keyword(paygap, keywords_bank_sector)
keywords_med_sector <- c("Medical", "Pharmaceutical", "Health")
med_sector_df <- filter_by_keyword(paygap, keywords_med_sector)
keywords_hotel_sector <- c("Hotel")
hotel_sector_df <- filter_by_keyword(paygap, keywords_hotel_sector)
keywords_marketing_sector <- c("Marketing")
marketing_sector_df <- filter_by_keyword(paygap, keywords_marketing_sector)
keywords_education_sector <- c("Education", "School")
education_sector_df <- filter_by_keyword(paygap, keywords_education_sector)
keywords_consulting_sector <- c("Consulting")
consulting_sector_df <- filter_by_keyword(paygap, keywords_consulting_sector)
keywords_travel_sector <- c("Travel")
travel_sector_df <- filter_by_keyword(paygap, keywords_travel_sector)
keywords_accounting_sector <- c("Accounting")
accounting_sector_df <- filter_by_keyword(paygap, keywords_accounting_sector)
keywords_airline_sector <- c("Airline")
airline_sector_df <- filter_by_keyword(paygap, keywords_airline_sector)
keywords_entertainment_sector <- c("Entertainment", "Art", "Recreation")
entertainment_sector_df <- filter_by_keyword(paygap, keywords_entertainment_sector)
keywords_retail_sector <- c("Retail")
retail_sector_df <- filter_by_keyword(paygap, keywords_retail_sector)
# Function to plot gender distribution by income quartile
plot_gender_distribution <- function(df) {
df %>%
gather(key = "Quartile", value = "Percentage", MaleLowerQuartile:FemaleTopQuartile) %>%
separate(Quartile, into = c("Gender", "Quartile"), sep = "(?<=Male|Female)") %>%
ggplot(aes(x = Quartile, y = Percentage, fill = Gender)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Distribution of Population Across Income Groups by Gender",
x = "Income Quartile",
y = "Percentage of Population",
fill = "Gender") +
theme_minimal()
}
# Plotting for the Technology sector
plot_gender_distribution(tech_sector_df)
view(retail_sector_df)
# List of keywords for different sectors
sectors_keywords <- list(
tech = c("Tech", "IT"),
finance = c("Financial", "Finance", "Insurance"),
education = c("Education", "School"),
healthcare = c("Medical", "Pharmaceutical", "Health"),
retail = c("Retail"),
entertainment = c("Entertainment", "Art", "Recreation"),
travel = c("Travel"),
consulting = c("Consulting"),
banking = c("Bank"),
marketing = c("Marketing")
)
# Dictionary to hold data frames for each sector
sector_data_frames <- map(sectors_keywords, filter_by_keyword, df = paygap)
# Function to plot gender distribution by income quartile for a given sector
plot_gender_distribution <- function(df, sector_name) {
df %>%
gather(key = "Quartile", value = "Percentage", MaleLowerQuartile:FemaleTopQuartile) %>%
separate(Quartile, into = c("Gender", "Quartile"), sep = "(?<=Male|Female)") %>%
ggplot(aes(x = Quartile, y = Percentage, fill = Gender)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = paste("Distribution in", sector_name, "Sector Across Income Groups by Gender"),
x = "Income Quartile",
y = "Percentage of Population",
fill = "Gender") +
theme_minimal()
}
# Generate plots for each sector
plots <- map2(sector_data_frames, names(sector_data_frames), plot_gender_distribution)
# Print all plots (you can also save them as images if required)
walk(plots, print)
# Function to plot gender distribution by income quartile for a given sector
plot_gender_distribution <- function(df, sector_name) {
df %>%
gather(key = "Quartile", value = "Percentage", MaleLowerQuartile:FemaleTopQuartile) %>%
separate(Quartile, into = c("Gender", "Quartile"), sep = "(?<=Male|Female)") %>%
ggplot(aes(x = Quartile, y = Percentage, fill = Gender)) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~Year, scales = "free_y") +  # Adding facet by year
labs(title = paste("Distribution in", sector_name, "Sector Across Income Groups by Gender"),
x = "Income Quartile",
y = "Percentage of Population",
fill = "Gender") +
theme_minimal()
}
# Generate plots for each sector
plots <- map2(sector_data_frames, names(sector_data_frames), plot_gender_distribution)
# Print all plots (you can also save them as images if required)
walk(plots, print)
# Function to plot gender distribution by income quartile for a given sector
plot_gender_distribution <- function(df, sector_name) {
df %>%
gather(key = "Quartile", value = "Percentage", MaleLowerQuartile:FemaleTopQuartile) %>%
separate(Quartile, into = c("Gender", "Quartile"), sep = "(?<=Male|Female)") %>%
ggplot(aes(x = Quartile, y = Percentage, fill = Gender)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = paste("Distribution in", sector_name, "Sector Across Income Groups by Gender"),
x = "Income Quartile",
y = "Percentage of Population",
fill = "Gender") +
theme_minimal()
}
# Generate plots for each sector
plots <- map2(sector_data_frames, names(sector_data_frames), plot_gender_distribution)
# Print all plots (you can also save them as images if required)
walk(plots, print)
view(tech_sector_df)
# Function to plot gender distribution by income quartile for a given sector
plot_gender_distribution <- function(df, sector_name) {
df %>%
gather(key = "Quartile", value = "Percentage", MaleLowerQuartile:FemaleTopQuartile) %>%
separate(Quartile, into = c("Gender", "Quartile"), sep = "(?<=Male|Female)") %>%
ggplot(aes(x = Quartile, y = Percentage, fill = Gender)) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~Year, scales = "free_y") +  # Adding facet by year
labs(title = paste("Distribution in", sector_name, "Sector Across Income Groups by Gender"),
x = "Income Quartile",
y = "Percentage of Population",
fill = "Gender") +
theme_minimal()
}
# Generate plots for each sector
plots <- map2(sector_data_frames, names(sector_data_frames), plot_gender_distribution)
# Print all plots (you can also save them as images if required)
walk(plots, print)
# List of keywords for different sectors
sectors_keywords <- list(
#tech = c("Tech", "IT"),
finance = c("Financial", "Finance", "Insurance"),
education = c("Education", "School"),
healthcare = c("Medical", "Pharmaceutical", "Health"),
retail = c("Retail"),
entertainment = c("Entertainment", "Art", "Recreation"),
travel = c("Travel"),
consulting = c("Consulting"),
banking = c("Bank"),
marketing = c("Marketing")
)
# Dictionary to hold data frames for each sector
sector_data_frames <- map(sectors_keywords, filter_by_keyword, df = paygap)
# Function to plot gender distribution by income quartile for a given sector
plot_gender_distribution <- function(df, sector_name) {
df %>%
gather(key = "Quartile", value = "Percentage", MaleLowerQuartile:FemaleTopQuartile) %>%
separate(Quartile, into = c("Gender", "Quartile"), sep = "(?<=Male|Female)") %>%
ggplot(aes(x = Quartile, y = Percentage, fill = Gender)) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~Year, scales = "free_y") +  # Adding facet by year
labs(title = paste("Distribution in", sector_name, "Sector Across Income Groups by Gender"),
x = "Income Quartile",
y = "Percentage of Population",
fill = "Gender") +
theme_minimal()
}
# Generate plots for each sector
plots <- map2(sector_data_frames, names(sector_data_frames), plot_gender_distribution)
# Print all plots (you can also save them as images if required)
walk(plots, print)
library(tidyverse)
#install.packages("vroom")
library(vroom)
#install.packages("fs")
library(fs)
library(readr)
library(dplyr)
library(lubridate)
library(tidyverse)
#install.packages("vroom")
library(vroom)
#install.packages("fs")
library(fs)
library(readr)
library(dplyr)
library(lubridate)
paygap <- read_csv('data/cleaned/paygaps_2018_2022.csv')
companies <- read_csv('data/cleaned/companies.csv')
# Convert 'DueDate' to date format and extract the year
paygap <- paygap %>%
mutate(Year = year(ymd_hms(DueDate)))  # Convert DueDate to Year
# Function to filter sector by keyword
filter_by_keyword <- function(df, keywords) {
pattern <- paste(keywords, collapse = "|")
filtered_df <- df[grep(pattern, df$CurrentName, ignore.case = TRUE ),]
return(filtered_df)
}
# Test on the Technology sector
keywords_tech_sector <- c("Tech", "IT")
tech_sector_df <- filter_by_keyword(paygap, keywords_tech_sector)
keywords_financial_sector <- c("Financial", "Finance", "Insurance")
financial_sector_df <- filter_by_keyword(paygap, keywords_financial_sector)
keywords_bank_sector <- c("Bank")
bank_sector_df <- filter_by_keyword(paygap, keywords_bank_sector)
keywords_med_sector <- c("Medical", "Pharmaceutical", "Health")
med_sector_df <- filter_by_keyword(paygap, keywords_med_sector)
keywords_hotel_sector <- c("Hotel")
hotel_sector_df <- filter_by_keyword(paygap, keywords_hotel_sector)
keywords_marketing_sector <- c("Marketing")
marketing_sector_df <- filter_by_keyword(paygap, keywords_marketing_sector)
keywords_education_sector <- c("Education", "School")
education_sector_df <- filter_by_keyword(paygap, keywords_education_sector)
keywords_consulting_sector <- c("Consulting")
consulting_sector_df <- filter_by_keyword(paygap, keywords_consulting_sector)
keywords_travel_sector <- c("Travel")
travel_sector_df <- filter_by_keyword(paygap, keywords_travel_sector)
keywords_accounting_sector <- c("Accounting")
accounting_sector_df <- filter_by_keyword(paygap, keywords_accounting_sector)
keywords_airline_sector <- c("Airline")
airline_sector_df <- filter_by_keyword(paygap, keywords_airline_sector)
keywords_entertainment_sector <- c("Entertainment", "Art", "Recreation")
entertainment_sector_df <- filter_by_keyword(paygap, keywords_entertainment_sector)
keywords_retail_sector <- c("Retail")
retail_sector_df <- filter_by_keyword(paygap, keywords_retail_sector)
view(tech_sector_df)
# List of keywords for different sectors
sectors_keywords <- list(
#tech = c("Tech", "IT"),
finance = c("Financial", "Finance", "Insurance"),
education = c("Education", "School"),
healthcare = c("Medical", "Pharmaceutical", "Health"),
retail = c("Retail"),
entertainment = c("Entertainment", "Art", "Recreation"),
travel = c("Travel"),
consulting = c("Consulting"),
banking = c("Bank"),
marketing = c("Marketing")
)
# Dictionary to hold data frames for each sector
sector_data_frames <- map(sectors_keywords, filter_by_keyword, df = paygap)
# Function to plot gender distribution by income quartile for a given sector
plot_gender_distribution <- function(df, sector_name) {
df %>%
gather(key = "Quartile", value = "Percentage", MaleLowerQuartile:FemaleTopQuartile) %>%
separate(Quartile, into = c("Gender", "Quartile"), sep = "(?<=Male|Female)") %>%
ggplot(aes(x = Quartile, y = Percentage, fill = Gender)) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~Year, scales = "free_y") +  # Adding facet by year
labs(title = paste("Distribution in", sector_name, "Sector Across Income Groups by Gender"),
x = "Income Quartile",
y = "Percentage of Population",
fill = "Gender") +
theme_minimal()
}
# Generate and print plots for each sector
plots <- map2(sector_data_frames, names(sector_data_frames), plot_gender_distribution)
walk(plots, print)
# Function to plot gender distribution by income quartile for a given sector and year
plot_gender_distribution_by_year <- function(df, sector_name) {
years <- unique(df$Year)
plots <- map(years, function(year) {
df_year <- df %>% filter(Year == year)
df_year %>%
gather(key = "Quartile", value = "Percentage", MaleLowerQuartile:FemaleTopQuartile) %>%
separate(Quartile, into = c("Gender", "Quartile"), sep = "(?<=Male|Female)") %>%
ggplot(aes(x = Quartile, y = Percentage, fill = Gender)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = paste("Distribution in", sector_name, "Sector in", year, "Across Income Groups by Gender"),
x = "Income Quartile",
y = "Percentage of Population",
fill = "Gender") +
theme_minimal()
})
return(plots)
}
# Generate and print plots for each sector and year
all_plots <- map2(sector_data_frames, names(sector_data_frames), ~ plot_gender_distribution_by_year(.x, .y))
walk(all_plots, function(sector_plots) {
walk(sector_plots, print)
})
# Function to plot gender distribution by income quartile for a given sector and year
plot_gender_distribution_by_year <- function(df, sector_name) {
years <- unique(df$Year)
plots <- map(years, function(year) {
df_year <- df %>% filter(Year == year)
df_year %>%
gather(key = "Quartile", value = "Percentage", MaleLowerQuartile:FemaleTopQuartile) %>%
separate(Quartile, into = c("Gender", "Quartile"), sep = "(?<=Male|Female)") %>%
mutate(Quartile = factor(Quartile, levels = c("LowerQuartile", "LowerMiddleQuartile", "UpperMiddleQuartile", "TopQuartile"))) %>%
ggplot(aes(x = Quartile, y = Percentage, fill = Gender)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = paste("Distribution in", sector_name, "Sector in", year, "Across Income Groups by Gender"),
x = "Income Quartile",
y = "Percentage of Population",
fill = "Gender") +
theme_minimal()
})
return(plots)
}
# Generate and print plots for each sector and year
all_plots <- map2(sector_data_frames, names(sector_data_frames), ~ plot_gender_distribution_by_year(.x, .y))
walk(all_plots, function(sector_plots) {
walk(sector_plots, print)
})
install.packages("shiny")
library(shiny)
library(tidyverse)
#install.packages("vroom")
library(vroom)
#install.packages("fs")
library(fs)
library(readr)
library(dplyr)
library(lubridate)
#install.packages("shiny")
library(shiny)
library(tidyverse)
#install.packages("vroom")
library(vroom)
#install.packages("fs")
library(fs)
library(readr)
library(dplyr)
library(lubridate)
paygap <- read_csv('data/cleaned/paygaps_2018_2022.csv')
companies <- read_csv('data/cleaned/companies.csv')
# Convert 'DueDate' to date format and extract the year
paygap <- paygap %>%
mutate(Year = year(ymd_hms(DueDate)))  # Convert DueDate to Year
# Function to filter sector by keyword
filter_by_keyword <- function(df, keywords) {
pattern <- paste(keywords, collapse = "|")
filtered_df <- df[grep(pattern, df$CurrentName, ignore.case = TRUE ),]
return(filtered_df)
}
# Test on the Technology sector
keywords_tech_sector <- c("Tech", "IT")
tech_sector_df <- filter_by_keyword(paygap, keywords_tech_sector)
keywords_financial_sector <- c("Financial", "Finance", "Insurance")
financial_sector_df <- filter_by_keyword(paygap, keywords_financial_sector)
keywords_bank_sector <- c("Bank")
bank_sector_df <- filter_by_keyword(paygap, keywords_bank_sector)
keywords_med_sector <- c("Medical", "Pharmaceutical", "Health")
med_sector_df <- filter_by_keyword(paygap, keywords_med_sector)
keywords_hotel_sector <- c("Hotel")
hotel_sector_df <- filter_by_keyword(paygap, keywords_hotel_sector)
keywords_marketing_sector <- c("Marketing")
marketing_sector_df <- filter_by_keyword(paygap, keywords_marketing_sector)
keywords_education_sector <- c("Education", "School")
education_sector_df <- filter_by_keyword(paygap, keywords_education_sector)
keywords_consulting_sector <- c("Consulting")
consulting_sector_df <- filter_by_keyword(paygap, keywords_consulting_sector)
keywords_travel_sector <- c("Travel")
travel_sector_df <- filter_by_keyword(paygap, keywords_travel_sector)
keywords_accounting_sector <- c("Accounting")
accounting_sector_df <- filter_by_keyword(paygap, keywords_accounting_sector)
keywords_airline_sector <- c("Airline")
airline_sector_df <- filter_by_keyword(paygap, keywords_airline_sector)
keywords_entertainment_sector <- c("Entertainment", "Art", "Recreation")
entertainment_sector_df <- filter_by_keyword(paygap, keywords_entertainment_sector)
keywords_retail_sector <- c("Retail")
retail_sector_df <- filter_by_keyword(paygap, keywords_retail_sector)
view(tech_sector_df)
# List of keywords for different sectors
sectors_keywords <- list(
#tech = c("Tech", "IT"),
finance = c("Financial", "Finance", "Insurance"),
education = c("Education", "School"),
healthcare = c("Medical", "Pharmaceutical", "Health"),
retail = c("Retail"),
entertainment = c("Entertainment", "Art", "Recreation"),
travel = c("Travel"),
consulting = c("Consulting"),
banking = c("Bank"),
marketing = c("Marketing")
)
# Dictionary to hold data frames for each sector
sector_data_frames <- map(sectors_keywords, filter_by_keyword, df = paygap)
# Define the plotting function adapted for Shiny
plot_gender_distribution <- function(df) {
df %>%
gather(key = "Quartile", value = "Percentage", MaleLowerQuartile:FemaleTopQuartile) %>%
separate(Quartile, into = c("Gender", "Quartile"), sep = "(?<=Male|Female)") %>%
mutate(Quartile = factor(Quartile, levels = c("LowerQuartile", "LowerMiddleQuartile", "UpperMiddleQuartile", "TopQuartile"))) %>%
ggplot(aes(x = Quartile, y = Percentage, fill = Gender)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Gender Pay Gap Distribution",
x = "Income Quartile",
y = "Percentage of Population",
fill = "Gender") +
theme_minimal()
}
# Define UI
ui <- fluidPage(
titlePanel("Gender Pay Gap Visualization"),
sidebarLayout(
sidebarPanel(
selectInput("sector", "Choose a Sector:", choices = c("Tech", "Financial", "Education", "Healthcare", "Retail")),
selectInput("year", "Select Year:", choices = unique(paygap$Year)),
actionButton("go", "Generate Graph")
),
mainPanel(
plotOutput("incomeDistPlot")
)
)
)
# Define server logic
server <- function(input, output) {
data_filtered <- reactive({
req(input$go)  # This makes sure the code waits for the user to click 'Generate Graph'
sector_data <- paygap %>%
filter(str_detect(EmployerName, regex(input$sector, ignore_case = TRUE)) & Year == as.numeric(input$year))
return(sector_data)
})
output$incomeDistPlot <- renderPlot({
req(data_filtered())  # Ensure there is data to plot
plot_gender_distribution(data_filtered())
})
}
# Run the application
shinyApp(ui = ui, server = server)
